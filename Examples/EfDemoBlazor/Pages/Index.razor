@using EfDemoBlazor.Data
@using BIT.Data.Sync.Client
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.Extensions.Logging

@page "/"
@inject IServiceProvider provider;
@inject ConsoleEventService consoleEventService;

@*<div class="row">
  

   <RadzenDataGrid  AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="10" AllowPaging="true" AllowSorting="true"
                Data="@items" TItem="string" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="string" Property="."  Title="Name" />
    </Columns>

</RadzenDataGrid>
</div>*@

<div class="row">
    <RadzenTabs @ref="TabControl">
        <Tabs>
            @*@foreach (var item in Clients) {
                <RadzenTabsItem Text="@item.Key" ChildContent=item.Value>


                </RadzenTabsItem>
               <RadzenTabsItem Text="@item.Key">
                    <Client Identity="@item.Key"/>
                </RadzenTabsItem>
               
                <RadzenTabsItem Text="@item.Key">
                     @item.Value
                </RadzenTabsItem>
            }*@
            <RadzenTabsItem Text="A">
                    <Client Identity="A"/>
            </RadzenTabsItem>
            <RadzenTabsItem Text="B">
                    <Client Identity="B"/>
            </RadzenTabsItem>
            <RadzenTabsItem Text="C">
                    <Client Identity="C"/>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</div>
 
@code 
{
    
    public string value { get; set; }
    List<string> items = new List<string>(){ "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
    public void UpdateConsole(string message)
    {

    }
    
    
    public Radzen.Blazor.RadzenTabs TabControl { get; set; }
    protected override async Task OnInitializedAsync()
    {
       
       
    }

    protected async override void OnAfterRender(bool firstRender)
    {
        
        base.OnAfterRender(firstRender);
        if(firstRender)
        {
            
            this.value = "aaa";
            this.StateHasChanged();
           
        }

    }
    }
   

